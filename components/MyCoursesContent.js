import React, { Component } from 'react';
import { View, ScrollView, Text, ImageBackground, StyleSheet} from 'react-native';
import { Icon, ListItem } from 'react-native-elements';

import firebase from 'react-native-firebase';


const list_courses = [
  {
      id: 'some ID generated by Firebase',
      name: 'Python II',
      avatar_url: 'https://via.placeholder.com/128',
      status: 'Spaces Available',
      building: 'Main Building',
      room: 'Turrialba',
      day: 'Monday',
      start_date: 'April 22',
      end_date: 'July 22',
      instructor: 'Juan Monge',
      reason:  '',
      screen: 'BarraHonda'
    },
    {
      id: 'some ID generated by Firebase',
      name: 'AWS',
      avatar_url: 'https://via.placeholder.com/128',
      status: 'Full',
      building: 'Annex Building',
      room: 'Barra Honda',
      day: 'Friday',
      start_date: 'April 22',
      end_date: 'July 22',
      instructor: 'Allan Valverde',
      reason:  '',
      screen: 'BarraHonda'
    },
]



export default class MyCoursesContent extends Component {

  constructor() {
    super();
    this.state = {
      courses: [],
        data: [],
        c: [],
        finishedCourses: [],
        activityIndicator: false
    };
  }

  componentDidMount() {
    return firebase.database().ref('users/' + this.props.user.uid + '/courses/2019/Q2').once('value', (snapshot) => {
      
      this.setState({ courses: snapshot.val() })
      this.setState({ courses: Object.keys(this.state.courses) })
      console.warn(this.state.courses)
      /*for ( a in this.state.userInfo.courses ){
        for ( b in this.state.userInfo.courses[a]) {
          for ( c in this.state.userInfo.courses[a][b]){
            this.setState(prevState => ({
              finishedCourses: [...prevState.finishedCourses, this.state.userInfo.courses[a][b][c]]
            }) )
            this.setState(prevState => ({
              data: [...prevState.data, this.state.userInfo.courses[a][b][c]['grade']]
            }) )
            this.setState(prevState => ({
              courses: [...prevState.courses, this.state.userInfo.courses[a][b][c]['name']]
            }) )
          }
        }
      }*/
  });
  
  }
    render() {
        return (
<ScrollView
contentContainerStyle={{backgroundColor: 'white'}}>
  <ImageBackground 
      source={{ uri: 'https://i.imgur.com/UPrs1EWl.jpg' }} 
      style= {{ width: '100%', height: 280}}>
      <View style={{ flexDirection:'row' }}>
        <View style={{ alignItems: 'flex-start', margin: 10 }}>
        <Icon 
            name='book-open-page-variant' 
            type='material-community' 
            color='white'
            containerStyle={{ margin: 10, marginTop: 50 }}
            />
        <Text style={ styles.textTitle }>My Courses</Text>
        <Text style={ styles.textSubTitle }>Franklin Stennett</Text>
        </View>
      </View>              
  </ImageBackground>
  <View style={styles.separatorView}/>
  <View>
      {  
      list_courses.map((l, i) => (
        <ListItem
          key={i}
          leftAvatar={{ source: { uri: l.avatar_url } }}
          title={l.name}
          rightIcon={<Icon name='keyboard-arrow-right' color='grey' />}
          onPress={()=>this.props.navigation.navigate('MyCourse')}
        />
      ))
      } 
      <View style={styles.separatorView}/>
  </View>
</ScrollView>
);
}
}

const styles = StyleSheet.create({
separatorView: {
margin: 40,
borderBottomColor: 'grey',
borderBottomWidth: 1
},
textTitle: {
color: 'white',
fontWeight: 'bold',
fontSize: 40 
},
textSubTitle:{
color: 'white',
fontSize: 20
}

})